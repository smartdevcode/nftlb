table ip nftlb {
	map nat-udp-services {
		type ipv4_addr . inet_service : verdict
		elements = { 192.168.0.100 . 80 : goto nat-lb01,
			     192.168.0.100 . 81 : goto nat-lb01,
			     192.168.0.100 . 82 : goto nat-lb01 }
	}

	map udp-services-back {
		type ipv4_addr . inet_service : ipv4_addr
	}

	map udp-services-back-m {
		type mark : ipv4_addr
		elements = { 0x00000200 : 192.168.0.101, 0x00000201 : 192.168.0.101 }
	}

	map filter-udp-services {
		type ipv4_addr . inet_service : verdict
		elements = { 192.168.0.100 . 80 : goto filter-lb01,
			     192.168.0.100 . 81 : goto filter-lb01,
			     192.168.0.100 . 82 : goto filter-lb01 }
	}

	chain prerouting {
		type nat hook prerouting priority filter; policy accept;
		ip daddr . udp dport vmap @nat-udp-services
	}

	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;
		ct mark 0x80000000/1 masquerade
		snat to ip daddr . udp dport map @udp-services-back
		snat to ct mark map @udp-services-back-m
	}

	chain filter {
		type filter hook prerouting priority mangle; policy accept;
		meta mark set ct mark
		ip daddr . udp dport vmap @filter-udp-services
	}

	chain filter-lb01 {
		ct state new ct mark 0x00000000 ct mark set numgen random mod 10 map { 0-4 : 0x00000200, 5-9 : 0x00000201 }
	}

	chain nat-lb01 {
		dnat to ct mark map { 0x00000200 : 192.168.0.10, 0x00000201 : 192.168.0.11 }
	}
}
