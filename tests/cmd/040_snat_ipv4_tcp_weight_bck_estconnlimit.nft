table ip nftlb {
	map filter-tcp-services {
		type ipv4_addr . inet_service : verdict
		elements = { 192.168.0.100 . 80 : goto filter-lb01 }
	}

	map nat-tcp-services {
		type ipv4_addr . inet_service : verdict
		elements = { 192.168.0.100 . 80 : goto nat-lb01 }
	}

	map tcp-services-back {
		type ipv4_addr . inet_service : ipv4_addr
	}

	chain filter {
		type filter hook prerouting priority mangle; policy accept;
		meta mark set ct mark
		ip daddr . tcp dport vmap @filter-tcp-services
	}

	chain filter-lb01 {
		ct mark set numgen random mod 3 map { 0 : 0x80000001, 1-2 : 0x80000002 }
		ct mark 0x80000001 meter est-connlimit-bck0 size 65535 { ip saddr ct count over 1 }  log prefix "est-connlimit-bck0" drop
		ct mark 0x80000002 meter est-connlimit-bck1 size 65535 { ip saddr ct count over 2 }  log prefix "est-connlimit-bck1" drop
	}

	chain prerouting {
		type nat hook prerouting priority filter; policy accept;
		ip daddr . tcp dport vmap @nat-tcp-services
	}

	chain postrouting {
		type nat hook postrouting priority srcnat; policy accept;
		ct mark 0x80000000/1 masquerade
		snat to ip daddr . tcp dport map @tcp-services-back
	}

	chain nat-lb01 {
		dnat to ct mark map { 0x80000001 : 192.168.0.10, 0x80000002 : 192.168.0.20 }
	}
}
